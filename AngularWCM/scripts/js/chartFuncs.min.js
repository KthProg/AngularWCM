function getByName(e) { return $("[name='" + e + "']") } function download(e, t) { var n = document.createElement("a"); n.setAttribute("href", "data:text/plain;charset=utf-8," + encodeURIComponent(t)); n.setAttribute("download", e); n.click() } function getParams(e) { $.ajax({ url: "../scripts/php/getParams.php", type: "POST", dataType: "json", data: { Query: e }, success: renderParamInputs, error: logError }) } function logError(e, t, n) { console.log(t + " : " + n); console.log(this) } function renderParamInputs(e) { var t = $("#ParamDiv"); t.html(""); if (e.parameter != undefined) { if (e.parameter.length === undefined) { var n = [e.parameter] } else { var n = e.parameter } for (var r = 0, i = n.length; r < i; ++r) { var s = n[r]["@attributes"].name; var o = n[r].type || "text"; var u = n[r].options ? n[r].options.option || "" : ""; var a = n[r].query || ""; addParameterInput(s, o, u, a) } } } function addParameterInput(e, t, n, r) { var i = $("#ParamDiv"); if (t == "select") { if (r) { var s = objectToOptionsHTML(sendNoParamQuery(r)) } else { var s = arrayToOptionsHTML(n) } i.append("<label>" + e + "</label><select name='Params[]'><option value=''>" + e + "</option>" + s + "</select>") } else { i.append("<label>" + e + "</label><input type='" + t + "' name='Params[]' placeholder='" + e + "' />") } } function sendNoParamQuery(e) { var t; $.ajax({ async: false, data: { Query: e, Params: "[]" }, dataType: "json", success: function (e) { t = e }, url: "/scripts/php/Query.php" }); return t } function arrayToOptionsHTML(e) { return e.reduce(function (e, t) { return e + "<option value='" + t + "'>" + t + "</option>" }, "") } function objectToOptionsHTML(e) { var t = ""; for (key in e) { t += "<option value='" + key + "'>" + e[key] + "</option>" } return t } function paramsToArray() { var e = []; $("[name='Params[]']").each(function () { e.push($(this).val()) }); return e } function checkFilledOut() { var e = paramsToArray(); var t = $("[name='Query']").val(); var n = $("[name='ChartAs'] option:selected").val(); var r = e.indexOf("") > -1; var i = t == "" || t == undefined; var s = n == "" || n == undefined; if (i || s || r) { var o = (i ? "Select a query to run. " : "") + (s ? "Select a chart type. " : "") + (r ? "Fill in all parameters." : ""); alert(o); return false } return true } function chartData() { var e = paramsToArray(); var t = $("[name='Query']").val(); var n = $("[name='ChartAs'] option:selected").val(); if (!checkFilledOut()) { return } $.ajax({ url: "/scripts/php/Query.php", type: "GET", dataType: "json", data: { Query: t, Params: JSON.stringify(e), ASSOC: "true" }, success: renderChartData, error: logError }); document.getElementById("chartDiv").innerHTML = '<div class="spinner"><div class="circle1 circle"></div><div class="circle2 circle"></div><div class="circle3 circle"></div><div class="circle4 circle"></div><div class="circle5 circle"></div><div class="circle6 circle"></div><div class="circle7 circle"></div><div class="circle8 circle"></div><div class="circle9 circle"></div><div class="circle10 circle"></div><div class="circle11 circle"></div><div class="circle12 circle"></div></div>' } function renderChartData(e) { if (e.length === 0) { document.getElementById("chartDiv").innerHTML = "<h1>Error: No Data</h1>" } console.log(e); var t = { title: $("[name='Query'] option:selected").text(), isStacked: true, curveType: "function", trendlines: getTrendlineObject(Object.keys(e[0]).length) }; var n = $("[name='ChartAs'] option:selected").val(); var r = $("[name='Query'] option:selected").attr("data-firstcol") || ""; var i = getColData(e, r); var s = i["datatable"]; for (var o in i["options"]) { t[o] = i["options"][o] } userChart(s, n, t) } function getTrendlineObject(e) { if ($("#showTrendCheck:checked").length > 0) { var t = {}; for (var n = 0; n < e; ++n) { t[n] = {} } console.log(t); return t } else { return {} } } function getColData(e, t) { var n = new google.visualization.DataTable; var r = Object.keys(e[0]); r.splice(r.indexOf(t), 1); r.unshift(t); var i = {}; var s = true; for (var o = 0, u = r.length; o < u; ++o) { var a = r[o]; i[a] = {}; i[a]["type"] = objectArrayKeyType(a, e); if (o === 0) continue; s = s && i[a]["type"] === "number" } var f = null; var l = null; if (i[r[0]]["type"] === "string" && s) { e = e.sort(function (e, t) { var n = [0, 0]; n[0] = getRowTotal(e); n[1] = getRowTotal(t); f = n[0] < f || f == null ? n[0] : f; f = n[1] < f || f == null ? n[1] : f; l = n[0] > l || l == null ? n[0] : l; l = n[1] > l || l == null ? n[1] : l; if ($("[name='sortOrder'] option:selected").val() == "Asc") { return n[0] - n[1] } else { return -(n[0] - n[1]) } }) } var c = []; for (var o = 0, u = r.length; o < u; ++o) { var a = r[o]; n.addColumn(i[a]["type"], a); c.push(a) } for (var o = 0, h = e.length; o < h; ++o) { var p = []; for (var d = 0, u = r.length; d < u; ++d) { var a = r[d]; e[o][a] = convertType(e[o][a], i[a]["type"]); p.push(e[o][a]) } n.addRow(p) } userDataToCSV(n, c); var v = { vAxis: { logScale: false } }; return { datatable: n, options: v } } function getRowTotal(e) { var t = Object.keys(e); var n = 0; for (var r = 1, i = t.length; r < i; ++r) { n += Number(e[t[r]]) } console.log(e[t[0]], n); return n } function convertType(e, t) { switch (t) { case "number": return Number(e); break; case "datetime": return new Date(e); break; case "string": return String(e); break } } function objectArrayKeyType(e, t) { return getArrType(objectArrayKeyValues(e, t)) } function objectArrayKeyValues(e, t) { var n = []; for (var r = 0, i = t.length; r < i; ++r) { n.push(t[r][e]) } return n } function getArrType(e) { var t = e.filter(function (e) { return !isNaN(e) }); var n = e.filter(function (e) { var t = new Date(e); return !isNaN(t.valueOf()) }); if (t.length === e.length) { return "number" } if (n.length === e.length) { return "datetime" } return "string" } function userDataToCSV(e, t) { var n = ""; for (var r = 0, i = t.length; r < i; ++r) { n += t[r] + "," } n = n.substr(0, n.length - 1); n += "\r\n"; n += google.visualization.dataTableToCsv(e); getByName("Data").val(n) } function printableData(e) { google.visualization.events.addListener(e, "ready", function () { document.getElementById("print").innerHTML = '<a href="' + e.getImageURI() + '">Printable Chart</a>' }) } function clearPrintableData() { document.getElementById("print").innerHTML = '<a href="">Printable Chart</a>' } function userChart(e, t, n) { document.getElementById("chartDiv").innerHTML = ""; switch (t) { case "bar": var r = new google.visualization.ColumnChart(document.getElementById("chartDiv")); printableData(r); break; case "table": var r = new google.visualization.Table(document.getElementById("chartDiv")); break; case "line": var r = new google.visualization.LineChart(document.getElementById("chartDiv")); printableData(r); break; case "pie": var r = new google.visualization.PieChart(document.getElementById("chartDiv")); printableData(r); break } r.draw(e, n) }