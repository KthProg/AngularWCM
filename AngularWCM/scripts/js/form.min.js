function Form($scope, $http) { $scope.fields = {}; $scope.queries = {}; var name = ""; var table = ""; var pk = ""; $scope.id = -1; var contacts = []; var emailBody = ""; var connection = ""; $scope.hasRecord = false; $scope.setFormData = function (e) { name = e; $http.get("/json/FormData.min.json").success(function (e) { connection = e[name]["Connection"]; table = e[name]["Table"]; pk = e[name]["PK"]; addContacts(e[name]["Emails"]); $scope.queries = e[name]["Queries"]; getMaxID(); getInitialOptions(); watchSelects() }) }; var getMaxID = function () { $http({ method: "POST", url: "/scripts/php/getMaxID.php", data: fieldsToRequestString() + "&" + getFormDataString(), headers: { "Content-Type": "application/x-www-form-urlencoded" } }).success(function (e) { $scope.id = Number(++e) }) }; var getInitialOptions = function () { for (var e in $scope.queries) { if ($scope.queries[e].params.length == 0) { getOptions(e) } } }; var getOptions = function (e) { var t = replaceParamsWithValues($scope.queries[e].params); $http.get("/scripts/php/Query.php?Query=" + encodeURIComponent($scope.queries[e].name) + "&Params=" + encodeURIComponent(JSON.stringify(t))).success(function (t) { $scope.queries[e].options = t }) }; var replaceParamsWithValues = function (e) { var t = []; for (var n = 0, r = e.length; n < r; ++n) { if (e[n].ref) { var i = refNameToValue(e[n].returns, e[n].name); t.push(i) } else { t.push(e[n].name) } } return t }; var refNameToValue = function (e, t) { switch (e) { case "value": var n = $scope.fields[t]; break; case "text": var r = getFieldEl(t).find("option:selected"); var n = r.text(); break } return n }; var watchSelects = function () { for (var q in $scope.queries) { var prms = $scope.queries[q].params; if (prms.length > 0) { var lastEl = prms.slice(-1).pop(); var watch = lastEl.name; var updateStr = "getOptions('" + q + "')"; (function (str) { $scope.$watch("fields['" + watch + "']", function () { eval(str) }) })(updateStr) } } }; $scope.open = function () { var e = prompt("Enter the id of the form you would like to open"); if (!(e == undefined || isNaN(e))) { $scope.id = e } $http({ method: "POST", url: "/scripts/php/Open.php", data: getFormDataString(), headers: { "Content-Type": "application/x-www-form-urlencoded" } }).success(function (e) { if (e !== null && typeof e === "object") { $scope.hasRecord = true; $scope.id = Number(e[pk]); delete e[pk]; for (var t in e) { if (getFieldEl(t)) { $scope.fields[t] = e[t] } } if (e["SketchURL"] != undefined) { $scope.fields["SketchURL"] = e["SketchURL"]; showSketch($scope.fields["SketchURL"]) } formatSrvToClient() } else { alert(name + " number " + $scope.id + " does not exist!") } }) }; var getFieldEl = function (e) { var t = $("[ng-model=\"fields['" + e + "']\"]"); if (t.length !== 0) { return t } else { return false } }; var showSketch = function (e) { var t = $("canvas"); var n = t[0].getContext("2d"); var r = new Image; r.src = e.replace(/ /g, "+"); r.onload = function () { n.drawImage(r, 0, 0) } }; var formatSrvToClient = function () { for (var e in $scope.fields) { f = $scope.fields[e]; if (f == null || f == undefined) { $scope.fields[e] = "" } else { $scope.fields[e] = "" + f } var t; if (t = getFieldEl(e)) { switch (t.attr("type")) { case "date": case "time": case "datetime-local": $scope.fields[e] = new Date(Date.parse(f)); break; case "number": case "range": case "checkbox": $scope.fields[e] = Number(f); break } } } }; $scope.update = function () { updateOrSubmit(true) }; $scope.submit = function () { updateOrSubmit(false) }; var updateOrSubmit = function (e) { if (formIsValid()) { emailBody = alterHTMLForEmail(); formatClientToSrv(); $http({ method: "POST", url: "/scripts/php/" + (e ? "Update" : "Submit") + ".php", data: fieldsToRequestString() + "&" + getFormDataString(), headers: { "Content-Type": "application/x-www-form-urlencoded" } }).success(function (e) { $(document.body).html(e) }) } else { alert("Some inputs are not valid, these should appear highlighted in red. Fill these out to submit the form.") } }; var formIsValid = function () { return $.makeArray($("select, input, textarea")).reduce(function (e, t) { return e && ([].indexOf.call(document.querySelectorAll(":invalid"), t) == -1 || $(t).is(":hidden")) }, true) }; var formatClientToSrv = function () { for (var e in $scope.fields) { var t = $scope.fields[e]; if (t == null || t == undefined) { t = "" } var n; if (n = getFieldEl(t)) { switch (n.attr("type")) { case "date": try { $scope.fields[e] = t.toISOString().split("T")[0] + " 00:00:00.000" } catch (r) { $scope.fields[e] = "" } break; case "datetime-local": $scope.fields[e].setHours(t.getHours() - 5); try { $scope.fields[e] = t.toISOString().replace("T", " ").replace("Z", "") } catch (r) { $scope.fields[e] = "" } break; case "time": $scope.fields[e].setHours(t.getHours() - 5); try { $scope.fields[e] = t.toISOString().split("T")[1].replace("Z", "") } catch (r) { $scope.fields[e] = "" } break } } } }; var getFormDataString = function () { var e = { Name: name, Table: table, PK: pk, ID: $scope.id, Contacts: contacts.join(";"), EmailBody: emailBody, Connection: connection }; return "FormData=" + encodeURIComponent(JSON.stringify(e)) }; var fieldsToRequestString = function () { return "Fields=" + encodeURIComponent(JSON.stringify($scope.fields)) }; $scope.clear = function () { window.location.reload() }; $scope.$on("uploadImage", function (e, t) { if (t.name != "" && t.URI != "") { $http({ method: "POST", url: "/scripts/php/SaveImage.php", data: "Image=" + encodeURIComponent(t.URI) + "&FileName=" + encodeURIComponent(t.name) + "&Line=" + encodeURIComponent(t.line) + "&" + getFormDataString(), headers: { "Content-Type": "application/x-www-form-urlencoded" } }).success(alert) } }); $scope.saveSketch = function (e) { $scope.fields["SketchURL"] = e.target.toDataURL().replace(/ /g, "+") }; $scope.$watchCollection("[fields['PlantID'], fields['DepartmentID'], fields['ZoneID']]", function (e, t) { getSupervisorEmailsByLocation(t[0], t[1], t[2], function (e) { var t = objectValuesToArray(e); removeContacts(t) }); getSupervisorEmailsByLocation(e[0], e[1], e[2], function (e) { var t = objectValuesToArray(e); addContacts(t) }) }, true); var getSupervisorEmailsByLocation = function (e, t, n, r) { $http.get("/scripts/php/Query.php?Query=SupervisorEmailsByLocation&Params=" + encodeURIComponent(JSON.stringify([e || "1", t || "0", n || "0"]))).success(r) }; var removeContacts = function (e) { for (var t = 0, n = e.length; t < n; ++t) { var r = contacts.indexOf(e[t]); if (r > -1) { contacts.splice(r, 1) } } }; var addContacts = function (e) { contacts = contacts.concat(e) } } app.controller("Form", Form)